<UserControl x:Class="Shadowsocks.Net.UI.WPF.ConfigModule.Controls.Config"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:base="clr-namespace:Shadowsocks.Net.UI.WPF.Infrastructure;assembly=Shadowsocks.Net.UI.WPF.Infrastructure"
             xmlns:control="clr-namespace:Shadowsocks.Net.UI.WPF.ConfigModule.Controls"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d"
             prism:ViewModelLocator.AutoWireViewModel="True"
             Width="320" Height="Auto">
    <GroupBox Style="{DynamicResource MaterialDesignGroupBox}" Header="{base:I18N 'Server Config'}" Margin="8">
        <StackPanel x:Name="configContentControl" Orientation="Vertical">
            <StackPanel.Resources>
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <Setter Property="Margin" Value="8 4 8 8" />
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                </Style>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}">
                    <Setter Property="Margin" Value="8" />
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                </Style>
            </StackPanel.Resources>

            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Server Host'}">
                <TextBox.Text>
                    <Binding Path="ServerConfig.Host">
                        <Binding.ValidationRules>
                            <control:HostValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Server Port'}" materialDesign:HintAssist.HelperText="{base:I18N '0-65535'}" Grid.Column="1"  Grid.Row="1">
                <TextBox.Text>
                    <Binding Path="ServerConfig.Port">
                        <Binding.ValidationRules>
                            <control:PortValidationRule Min="0" Max="65535" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <Grid Margin="8">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--#region Unsafe implementation -->
                <PasswordBox x:Name="MyPassword" materialDesign:HintAssist.Hint="{base:I18N 'Password'}" Style="{DynamicResource MaterialDesignFloatingHintPasswordBox}" Grid.Column="0">
                    <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="PasswordChanged">
                            <behaviors:InvokeCommandAction Command="{Binding PasswordChangedCommand}" CommandParameter="{Binding ElementName=MyPassword}" />
                        </behaviors:EventTrigger>
                        <behaviors:DataTrigger Binding="{Binding Visibility, ElementName=MyPassword}" Value="Visible">
                            <behaviors:ChangePropertyAction TargetObject="{Binding ElementName=MyPassword}" PropertyName="Password" Value="{Binding ServerConfig.Password}" />
                        </behaviors:DataTrigger>
                    </behaviors:Interaction.Triggers>
                </PasswordBox>
                <TextBox x:Name="MyPlainTextPassword" materialDesign:HintAssist.Hint="{base:I18N 'Password'}" Style="{DynamicResource MaterialDesignFloatingHintTextBox}" Grid.Column="0" Visibility="Hidden">
                    <TextBox.Text>
                        <Binding Path="ServerConfig.Password">
                            <Binding.ValidationRules>
                                <control:PasswordValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <!--#endregion-->

                <ToggleButton x:Name="RevealedButton" Grid.Column="1" Width="32" Height="32" VerticalAlignment="Bottom" Cursor="Hand" IsChecked="{Binding PasswordIsRevealed}">
                    <ToggleButton.Style>
                        <Style BasedOn="{StaticResource MaterialDesignIconButton}" TargetType="{x:Type ToggleButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=RevealedButton}" Value="True">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon EyeOffOutline}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=RevealedButton}" Value="False">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon EyeOutline}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <behaviors:Interaction.Triggers>
                        <behaviors:DataTrigger Binding="{Binding IsChecked, ElementName=RevealedButton}" Value="True">
                            <behaviors:ChangePropertyAction TargetObject="{Binding ElementName=MyPassword}" PropertyName="Visibility" Value="Hidden" />
                            <behaviors:ChangePropertyAction TargetObject="{Binding ElementName=MyPlainTextPassword}" PropertyName="Visibility" Value="Visible" />
                        </behaviors:DataTrigger>
                        <behaviors:DataTrigger Binding="{Binding IsChecked, ElementName=RevealedButton}" Value="False">
                            <behaviors:ChangePropertyAction TargetObject="{Binding ElementName=MyPassword}" PropertyName="Visibility" Value="Visible" />
                            <behaviors:ChangePropertyAction TargetObject="{Binding ElementName=MyPlainTextPassword}" PropertyName="Visibility" Value="Hidden" />
                        </behaviors:DataTrigger>
                    </behaviors:Interaction.Triggers>
                </ToggleButton>
            </Grid>
            <ComboBox materialDesign:HintAssist.Hint="{base:I18N 'Encryption'}" materialDesign:ComboBoxAssist.ClassicMode="True" ItemsSource="{Binding EncryptionMethods, Mode=OneTime}">
                <ComboBox.SelectedValue>
                    <Binding Path="ServerConfig.CipherName">
                        <Binding.ValidationRules>
                            <control:EncryptionValidationRule />
                        </Binding.ValidationRules>
                    </Binding>
                </ComboBox.SelectedValue>
            </ComboBox>
            <TextBox x:Name="Timeout" materialDesign:HintAssist.Hint="{base:I18N 'Timeout'}" materialDesign:TextFieldAssist.SuffixText="s">
                <TextBox.Text>
                    <Binding Path="ServerConfig.Timeout">
                        <Binding.ValidationRules>
                            <control:TimeoutValidationRule Min="1" Max="255" />
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Plugins'}" Text="{Binding ServerConfig.Plugin}" />
            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Plugins Options'}" Text="{Binding ServerConfig.PluginOptions}" />
            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Plugins Args'}" Text="{Binding ServerConfig.PluginArgs}" />
            <TextBox materialDesign:HintAssist.Hint="{base:I18N 'Remark'}" TextWrapping="Wrap" Text="{Binding ServerConfig.Remark}" />
        </StackPanel>
    </GroupBox>
</UserControl>